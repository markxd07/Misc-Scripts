-- This file was generated using Luraph Obfuscator v13.5.9

return(function(Vx,Lx,Ax,bx,Zx,fx,cx,ex,Wx,dx,Xx,xx,Px,Cx,Yx,zx,sx,Fx,px,Dx,jx,ux,Ix,ox,yx,hx,Qx,ix,Ux,Kx,mx,Mx,nx,rx,vx,Rx,Ox,Sx,Nx,lx,wx,E,...)local t=pcall;local R,m=nil,(nil);local k,N=select,0X02^0X034;local a,Ec=tostring,(0X0);do while Ec~=0X0002 do do if Ec~=0X00000 then m=xx or zx;do Ec=0x0002;end;else R={[hx]=1};Ec=0X1;end;end;end;end;local H=ox;local g,Y=Yx,setmetatable;do Ec=0X005;end;local x,o,h,V,I,Q,tx=nil,nil,nil,nil,nil,nil,nil;repeat do if Ec<=2 then do if not(Ec<=0)then if Ec~=0X1 then V=Vx;Ec=0X1;else do I=Lx;end;Ec=0x00000;end;else Q={0X6,0x3,cx};do Ec=0X3;end;end;end;else if not(Ec<=4)then if Ec~=0X00005 then h=string.rep;Ec=0X2;else x=dx;Ec=0X4;end;else if Ec~=3 then o=Ix;Ec=0x06;else tx=function(...)return k("#",...),{...};end;break;end;end;end;end;until false;local J,G=tonumber,mx;local F,c=setfenv,Fx;local U,l=Ux,(1);local A=((U and U()or _ENV));local S,s,w,z,f,C=nil,nil,nil,nil,nil,(nil);do for po=0X0,6 do if not(po<=0X00002)then if po<=4 then if po~=3 then z=string.match;else w=function()local aT=(G(S,l,l));l=l+1;do return aT;end;end;end;elseif po~=5 then C=0X80000000;else f=4294967296;end;else if po<=0X0000 then do S=Ax;end;else do if po==0X1 then else S=x(H(S,0x005),"..",function(LJ)if G(LJ,2)~=72 then local OH=(g(J(LJ,16)));if not(s)then return OH;else local bH,mH=0x00,(nil);while bH<0x002 do if bH==0 then mH=h(OH,s);bH=1;else do s=nil;end;bH=0x2;end;end;return mH;end;else local Qy=(0X1);while'\041{'do do if Qy==0X0 then return"";else do s=J(H(LJ,1,cx));end;do Qy=0x0;end;end;end;end;end;end);end;end;end;end;end;end;local P,B=f-1,error;Ec=0X0;local e,r=nil,(nil);do while Ec~=0X2 do if Ec==0X0 then e=function()local iz,gz,pz,bz=nil,nil,nil,nil;local uz=0X0;while uz<=1 do if uz~=0 then l=l+0x4;uz=2;else iz,gz,pz,bz=G(S,l,l+3);uz=0X1;end;end;return bz*0X0001000000+pz*65536+gz*256+iz;end;Ec=1;else r={[0X00000]={[0X0]=0,0X1,0x2,0X03,4,lx,6,7,0X00008,9,10,0Xb,12,13,Sx,0X00F},{[0x0]=1,0x0,3,sx,5,wx,0X00007,6,0X9,0X8,11,0Xa,0Xd,12,15,0XE},{[0]=2,ex,0X000,1,6,0X7,4,0X00005,10,11,8,0X9,0X000e,15,0XC,13},{[0X0]=3,0X2,1,0,7,6,0X05,wx,11,10,9,8,0X00F,14,0XD,Cx},{[0X0]=4,0X00005,0X6,fx,0,0X00001,0x2,3,12,0Xd,0X0e,0Xf,0X8,0x9,10,0Xb},{[0X0]=0x5,4,0X7,0x0006,0X1,0x0,ex,2,13,Cx,15,0x00e,9,0x8,11,10},{[0]=0X6,7,4,0x5,sx,3,0,0X1,14,15,12,0X0000D,0X000A,11,8,9},{[0X0]=0x7,0X6,5,0x00004,3,0X002,0x0001,0,0XF,0XE,0X000D,12,Nx,0XA,0x9,0x0008},{[0X0000]=0X8,0x9,0Xa,0XB,12,0X000d,0X0000E,0XF,hx,1,2,0X00003,4,5,6,7},{[0x0]=9,Px,0xB,0XA,13,12,15,0XE,1,0X0,0X0003,0x2,lx,0X0004,0X7,0X6},{[0]=10,11,0x08,0X00009,14,0X0f,0xc,0Xd,2,0x00003,0X0000,1,0X6,7,4,5},{[0X0]=11,10,9,0X8,0xf,14,13,12,3,2,1,0X00000,0X0007,0x6,5,0X4},{[0]=Cx,13,Sx,0x0F,Px,9,Mx,0X0B,0X4,0X5,6,7,hx,0x01,sx,0X03},{[0X0]=13,0XC,0X000f,0X0000e,0X9,8,11,10,0X05,0x04,0X00007,0X0006,1,0X0,0x3,2},{[hx]=14,0X0000F,12,13,10,0xB,Px,0X00009,6,0X007,0X4,5,2,3,0X0,1},{[0]=15,14,13,12,11,10,0X9,0x8,0X7,0X6,5,4,3,0X00002,1,0X0}};Ec=0X00002;end;end;end;local M=(C-0X1);do Ec=0X1;end;local X,D,p,i=nil,nil,nil,(nil);repeat if not(Ec<=0x0001)then do if Ec<=0X2 then do local iS,IS=0x0,(nil);repeat do if iS~=0 then for YR=1,0X0001F do local hR=0X1;repeat if hR==0 then IS=IS*0x00002;hR=2;else do(R)[YR]=IS;end;hR=0;end;until hR>=0X02;end;break;else IS=0X002;iS=1;end;end;until(false);end;do Ec=4;end;elseif Ec~=3 then D=function(PG,iG,bG)local jG=(0X1);local XG=(nil);repeat if jG<=0x0 then XG=XG-XG%cx;jG=0X2;else if jG~=1 then return XG;else XG=(PG/R[iG])%R[bG];jG=0x0;end;end;until(false);end;Ec=0X0;else i=(Rx or Dx);break;end;end;else if Ec~=0 then do X=function()local G9,d9=e(),(e());local j9=0X01;while true do if j9~=0X000 then if not(d9>=C)then else d9=d9-f;end;j9=0X00;else do return d9*f+G9;end;end;end;end;end;Ec=0X02;else do p=function()local vv,sv,Lv,Qv=nil,nil,nil,nil;for Jv=0X00000,0X4 do if not(Jv<=1)then do if Jv<=0x0002 then if not(vv==0X0000 and sv==0)then else return 0x0;end;else if Jv==0X00003 then Lv=(-0x01)^D(sv,31,1);else Qv=D(sv,20,11);end;end;end;else do if Jv==0 then vv=e();else do sv=e();end;end;end;end;end;local qv=cx;local Pv=(D(sv,hx,nx)*f+vv);for TU=0X0,1 do do if TU~=0X0 then return Lv*(0X2^(Qv-1023))*(Pv/N+qv);elseif Qv==0 then if Pv==0X0000 then do return Lv*0;end;else local X6=(0X0000);repeat do if X6~=0X0 then qv=0X0;do X6=2;end;else Qv=0X1;X6=1;end;end;until X6>=2;end;else if Qv~=0X0007ff then else do if Pv==0X0 then return Lv*(hx/0);else return Lv*(0x0001/0X0);end;end;end;end;end;end;end;end;Ec=3;end;end;until false;local y=(i and i.bxor or function(NK,OK)local jK,vK,AK=0X0004,nil,(nil);while 308359870 do if not(jK<=0X002)then if jK<=0X00003 then OK=OK%f;do jK=0X00000;end;else if jK==4 then NK=NK%f;do jK=1;end;else while NK>0 and OK>hx do local Ve=(2);local ie,se=nil,nil;repeat if Ve<=2 then do if not(Ve<=0X0)then do if Ve~=0X1 then do ie=NK%Xx;end;Ve=5;else vK=vK*0X10;Ve=0x0006;end;end;else do NK=(NK-ie)/0X000010;end;Ve=0X003;end;end;else if Ve<=3 then OK=(OK-se)/0X0010;Ve=0X01;else if Ve~=0X04 then se=OK%16;Ve=4;else AK=AK+r[ie][se]*vK;Ve=0X0;end;end;end;until Ve>0X5;end;do jK=0X00002;end;end;end;else do if not(jK<=0X0)then if jK==1 then vK=1;jK=0x3;else do return AK+NK*vK+OK*vK;end;end;else AK=0;jK=5;end;end;end;end;end);local T=type;local W=i and i[px]or function(xu,Ou)xu=xu%f;for HF=0X0,0X1 do if HF==0 then Ou=Ou%f;else return((xu+Ou)-y(xu,Ou))/2;end;end;end;local K=(i and i[rx]or function(kg,Dg)kg=kg%f;Dg=Dg%f;return P-W(P-kg,P-Dg);end);local Z,v=i and i.lshift,i and i[yx];local O,L=i and i.bnot or function(jr)return P-(jr%f);end,ix.wrap;local ax=(0X1);do Ec=0X4;end;local d,j,b,u=nil,nil,nil,(nil);repeat do if Ec<=0X0002 then if not(Ec<=0X000)then if Ec~=1 then v=v or function(TQ,BQ)if BQ>=32 then do return 0;end;end;if not(BQ<0X0)then else do return Z(TQ,-BQ);end;end;local OQ=((TQ%f/R[BQ]));return OQ-OQ%0x1;end;Ec=0X3;else u=function()local YD=(j());if not(YD>M)then else do return YD-f;end;end;return YD;end;Ec=0X6;end;else do b={[1]=5,[2]=0X1,[9]=0X0,[Kx]=0X2,[ex]=4,[5]=Ox,[0X2]=6,[0X4]=0X0008,[4]=1,[0X5]=0x00006,[0X4]=5};end;do Ec=1;end;end;else if Ec<=3 then j=function()local C1,p1=0X0,0X0;do while true do local ki=(G(S,l,l));l=l+1;C1=K(C1,Z(W(ki,0x7f),p1));do if W(ki,0X80)~=0 then else return C1;end;end;do p1=p1+7;end;end;end;end;Ec=0;else if Ec==4 then d=Wx;Ec=5;else Z=Z or function(hF,CF)local sF=2;while(true)do if sF<=0X0 then do return(hF*R[CF])%f;end;else do if sF~=1 then do if not(CF>=0X20)then else return 0;end;end;do sF=1;end;else if CF<0X00 then return v(hF,-CF);end;do sF=0;end;end;end;end;end;end;Ec=0X02;end;end;end;end;until Ec>5;local Ex=w();local qx=(w());Ec=0X1;local kx,Jx=nil,nil;repeat if Ec==0 then do Jx=function(R0)local D0,A0,X0=0,nil,(nil);do while D0~=2 do if D0==0 then do A0=e();end;do D0=1;end;else X0="";D0=2;end;end;end;for Yf=0X1,A0,Qx do local pf,bf=Yf+Qx-0X1,(nil);do for Od=0X0,0X3 do if Od<=0X1 then do if Od~=0X000 then bf={G(S,l+Yf-0X1,l+pf-cx)};else do if pf>A0 then do pf=A0;end;end;end;end;end;elseif Od==0X0002 then for md=cx,#bf do local sd=0x00000;while sd<=1 do do if sd==0 then(bf)[md]=y(bf[md],Ex);sd=0x1;else Ex=(R0*Ex+165)%256;sd=2;end;end;end;end;else X0=X0..g(m(bf));end;end;end;end;do l=l+A0;end;return X0;end;end;Ec=0x00002;else kx=function(Wl)local Vl,Rl,tl,Ll,bl=nil,nil,nil,nil,nil;for Dn=0x0,7 do if not(Dn<=0x3)then if not(Dn<=0X5)then do if Dn~=0X6 then return bl*16777216+Ll*vx+tl*256+Rl;else do l=l+0x4;end;end;end;else if Dn==4 then bl=y(Vl[0X4],qx);else do qx=(Zx*qx+Wl)%256;end;end;end;elseif not(Dn<=1)then if Dn~=2 then Ll=y(Vl[ex],qx);else tl=y(Vl[0x2],qx);end;else if Dn==0X0 then do Vl={G(S,l,l+0X3)};end;else Rl=y(Vl[0X1],qx);end;end;end;end;Ec=0;end;until Ec==0X02;Ec=0;local Tx,Bx=nil,nil;while Ec<=0X0001 do if Ec==0x000 then Tx={};Ec=1;else Bx={};Ec=2;end;end;Ec=1;local Hx=(nil);do repeat if Ec~=0 then do Ec=0X0;end;else function Hx(HI,jI,OI)local rI=(OI[3]);local wI,QI,pI,RI=OI[0X7],OI[9],OI[6],OI[5];local cI,zI=OI[8],(OI[1]);local lI=(Y({},{__mode="v"}));local dI=OI[4];local kI=nil;do kI=function(...)local Vi=1;local fi={};local Oi={[2]=OI,[0X1]=fi};local zi=(U and U()or _ENV);local pi,bi=tx(...);local ci=(zi==A and HI or zi);do pi=pi-0X1;end;for c4=0X000,pi do if pI>c4 then(fi)[c4]=bi[c4+1];else do break;end;end;end;local ui=0X00000;if not zI then bi=nil;else if rI then(fi)[pI]={n=pi>=pI and pi-pI+1 or 0,m(bi,pI+0x1,pi+1)};end;end;do if ci~=zi then if F then F(kI,ci);else _ENV=ci;end;end;end;do repeat local W8=(wI[Vi]);local s8=W8[7];Vi=Vi+1;do if s8<0x2e then if not(s8>=23)then if s8<11 then if s8<5 then do if s8<0X02 then do if s8==0x1 then(fi)[W8[6]]=v(fi[W8[1]],fi[W8[0X3]]);else local a7=W8[0X06];fi[a7]=fi[a7](m(fi,a7+1,ui));ui=a7;end;end;else do if s8>=3 then do if s8~=4 then fi[W8[0X6]]=ci[W8[0X5]];else local XK=W8[6];do for Ao=XK,XK+(W8[0X1]-0X1)do fi[Ao]=bi[pI+(Ao-XK)+0X00001];end;end;end;end;else local ZV=W8[6];local VV=(L(function(...)(c)();do for Ai in...do c(true,Ai);end;end;end));(VV)(fi[ZV],fi[ZV+0X0001],fi[ZV+2]);ui=ZV;do fi[ZV]=VV;end;do Vi=W8[1];end;end;end;end;end;else do if not(s8>=0X8)then if s8<6 then fi[W8[0X06]]=fi[W8[1]]>=fi[W8[0X00003]];else if s8==0X07 then fi[W8[6]]=true;else repeat local mP,NP=lI,(fi);if#mP>0X0000 then local MK={};for VE,uE in V,mP do do for yq,Yq in V,uE do if Yq[0x1]==NP and Yq[2]>=0X00000 then local cw=Yq[2];if not(not MK[cw])then else(MK)[cw]={NP[cw]};end;(Yq)[0X1]=MK[cw];(Yq)[2]=0X001;end;end;end;end;end;until"\091\065\0897P\114";return fi[W8[6]];end;end;else if not(s8>=0X9)then fi[W8[6]][W8[0X5]]=W8[4];elseif s8~=10 then do(fi)[W8[6]]=O(fi[W8[1]]);end;else(fi)[W8[6]]=fi[W8[0X01]]+fi[W8[3]];end;end;end;end;else if s8<17 then if not(s8<14)then if not(s8<0x000F)then if s8==16 then(fi)[W8[6]]=fi[W8[0X1]]~=fi[W8[3]];else local hI=(W8[0X00006]);(fi[hI])(fi[hI+1],fi[hI+0X00002]);ui=hI-0x01;end;else do(fi)[W8[6]]={};end;end;else do if s8>=0XC then if s8~=13 then fi[W8[0x00006]]=fi[W8[0X1]]~=W8[4];else local dH=W8[0X6];local HH,IH=fi[dH]();if not(HH)then else do fi[dH+1]=IH;end;Vi=W8[1];end;end;else ui=W8[6];fi[ui]();ui=ui-0X0001;end;end;end;else if s8<0X14 then if s8>=18 then if s8==19 then local kq=(W8[6]);local eq,Gq,vq=fi[kq]();if eq then(fi)[kq+0X001]=Gq;do(fi)[kq+2]=vq;end;Vi=W8[0x1];end;else local y3=W8[6];local I3=(L(function(...)(c)();do for S2,r2,Z2,D2,v2,V2,h2,y2,e2,M2 in...do(c)(true,{S2,r2,Z2,D2,v2,V2,h2,y2,e2,M2});end;end;end));I3(fi[y3],fi[y3+0X00001],fi[y3+2]);ui=y3;fi[y3]=I3;Vi=W8[1];end;else local Aq=jI[W8[0X01]];fi[W8[0X0006]]=Aq[1][Aq[2]];end;else if s8>=21 then if s8~=0X16 then(fi)[W8[6]]=fi[W8[0X1]]*fi[W8[0X0003]];else local qY=jI[W8[1]];do qY[0X0001][qY[2]]=fi[W8[0X06]];end;end;else(fi)[W8[6]]=fi[W8[0X1]]==fi[W8[0X0003]];end;end;end;end;else do if not(s8<34)then if not(s8<0X28)then do if not(s8<43)then if not(s8<0x2c)then if s8==0X2d then(fi)[W8[0x6]]={m({},1,W8[0x00001])};else if not(fi[W8[1]]<=fi[W8[0X3]])then Vi=W8[6];end;end;else do repeat local VY,BY=lI,(fi);if#VY>0X0 then local QT={};for SB,vB in V,VY do for bH,iH in V,vB do if iH[0X001]==BY and iH[2]>=0x00000 then local ij=(iH[0X2]);if not(not QT[ij])then else(QT)[ij]={BY[ij]};end;do(iH)[1]=QT[ij];end;(iH)[0X2]=1;end;end;end;end;until true;end;return m(fi,W8[0X006],ui);end;else do if not(s8<41)then do if s8==0x2a then local Q7=(W8[1]);local O7=fi[Q7];for qY=Q7+0X1,W8[3]do O7=O7..fi[qY];end;do(fi)[W8[6]]=O7;end;else local NZ=W8[6];fi[NZ]=fi[NZ](fi[NZ+0X1],fi[NZ+0x2]);ui=NZ;end;end;else do(fi)[W8[0X0006]]=Oi[W8[1]];end;end;end;end;end;elseif s8>=37 then if not(s8<0X26)then if s8~=39 then ci[W8[5]]=fi[W8[6]];else do repeat local gI,VI=lI,fi;if not(#gI>0X00)then else local lZ=({});for IQ,XQ in V,gI do for aN,ON in V,XQ do if ON[1]==VI and ON[0X002]>=0 then local St=(ON[2]);do if not(not lZ[St])then else lZ[St]={VI[St]};end;end;ON[1]=lZ[St];do(ON)[2]=0X001;end;end;end;end;end;until true;end;do return fi[W8[0x6]]();end;end;else if not(not fi[W8[6]])then else Vi=W8[0X1];end;end;else do if not(s8>=35)then do fi[W8[6]]=fi[W8[1]]%fi[W8[0x3]];end;else if s8~=36 then if fi[W8[0X0001]]~=fi[W8[0X00003]]then do Vi=W8[0X6];end;end;else local Q2=(W8[6]);local h2,z2,X2=fi[Q2],fi[Q2+1],(fi[Q2+2]);(fi)[Q2]=L(function()for jf=h2,z2,X2 do(c)(true,jf);end;end);Vi=W8[1];end;end;end;end;else if not(s8<0X01C)then do if s8<31 then do if s8<0x1D then local aM=(W8[1]);do(fi)[W8[6]]=fi[aM]..fi[aM+1];end;else if s8~=30 then local A2=(W8[6]);(fi[A2])(m(fi,A2+1,ui));ui=A2-1;else local kf=(W8[0X6]);local Vf,Uf=fi[kf]();do if not(Vf)then else for h3=0x1,W8[0X0003]do(fi)[kf+h3]=Uf[h3];end;do Vi=W8[0x1];end;end;end;end;end;end;else if not(s8<32)then do if s8==0X21 then local QB,bB=W8[0X6],(W8[0X3]-1)*50;local uB=(fi[QB]);for Rk=0X1,ui-QB do do uB[bB+Rk]=fi[QB+Rk];end;end;else fi[W8[6]]=fi[W8[0X1]]<fi[W8[0X3]];end;end;else local DT=QI[W8[1]];local gT=nil;local xT=DT[0X002];local RT=(#xT);if not(RT>0X0)then else gT={};for Dj=0x1,RT do local ej=(xT[Dj]);if ej[1]~=0X0 then gT[Dj-1]=jI[ej[2]];else gT[Dj-1]={fi,ej[0x2]};end;end;(o)(lI,gT);end;(fi)[W8[0X06]]=Hx(ci,gT,DT);end;end;end;else if not(s8<0X19)then if s8<26 then fi[W8[6]]=fi[W8[0X1]]<=fi[W8[3]];else if s8~=0x1b then(fi)[W8[6]]=fi[W8[0x00001]][W8[0x00004]];else(fi[W8[6]])[W8[5]]=fi[W8[3]];end;end;else if s8~=0x000018 then fi[W8[6]]=fi[W8[1]]%W8[4];else Oi[W8[0X1]]=fi[W8[0X6]];end;end;end;end;end;end;else if not(s8>=0x45)then if s8>=57 then if s8<63 then if s8>=0X00003c then if s8>=0X3D then if s8~=62 then repeat local mi,Zi=lI,(fi);if#mi>0X0 then local NL=({});do for Kh,gh in V,mi do do for B2,j2 in V,gh do if not(j2[0X0001]==Zi and j2[0x2]>=0x00)then else local YA=(j2[2]);do if not(not NL[YA])then else(NL)[YA]={Zi[YA]};end;end;(j2)[0X01]=NL[YA];(j2)[2]=1;end;end;end;end;end;end;until true;return;else fi[W8[6]]=not fi[W8[1]];end;else(fi)[W8[0x006]]=W8[0x5];end;else if s8>=0X03a then if s8~=0x3b then fi[W8[0x006]]=fi[W8[1]][fi[W8[0X0003]]];else do if W8[3]~=141 then fi[W8[0X00006]]=nil;else Vi=Vi-0X1;do wI[Vi]={[0X6]=(W8[6]-0X002A),[0X7]=55,[0X1]=(W8[1]-0X2A)};end;end;end;end;else fi[W8[6]]=W8[0X5];end;end;else if not(s8<0X42)then if s8>=0X043 then do if s8~=68 then if fi[W8[0X01]]==W8[4]then else Vi=W8[0X6];end;else fi[W8[0X0006]]=Z(fi[W8[0X001]],fi[W8[0X3]]);end;end;else if fi[W8[1]]==fi[W8[3]]then Vi=W8[0X00006];end;end;else if not(s8>=0X000040)then do(fi)[W8[0x06]]=fi[W8[0X1]]^fi[W8[3]];end;else if s8~=65 then fi[W8[0X6]][fi[W8[1]]]=fi[W8[3]];else do(fi)[W8[6]]=Bx[W8[0X1]];end;end;end;end;end;else do if not(s8<0X33)then if s8>=0X36 then if s8>=0x37 then if s8~=56 then fi[W8[0X0006]]=-fi[W8[0x01]];else fi[W8[0X6]]=fi[W8[1]]-fi[W8[3]];end;else if not(fi[W8[0X00006]])then else Vi=W8[0X0001];end;end;else if s8<52 then if fi[W8[1]]<=fi[W8[3]]then Vi=W8[6];end;else if s8==53 then do(fi)[W8[6]]=y(fi[W8[1]],fi[W8[0X3]]);end;else fi[W8[0X6]]=fi[W8[0x001]]>fi[W8[3]];end;end;end;elseif not(s8<0X000030)then if s8>=49 then do if s8~=0X32 then local OX,BX=W8[0X6],(fi[W8[1]]);fi[OX+1]=BX;(fi)[OX]=BX[W8[0X4]];else do repeat local Ji,ai=lI,(fi);do if#Ji>0 then local Na={};do for pV,vV in V,Ji do for Dr,Or in V,vV do if Or[1]==ai and Or[0x02]>=0 then local v4=Or[0X002];if not(not Na[v4])then else(Na)[v4]={ai[v4]};end;do Or[1]=Na[v4];end;(Or)[0X2]=0X01;end;end;end;end;end;end;until true;end;local bF=(W8[6]);return fi[bF](m(fi,bF+0X0001,ui));end;end;else local N0=W8[0X6];local d0,m0=fi[N0],((W8[3]-0x00001)*50);for oN=1,W8[0X0001]do d0[m0+oN]=fi[N0+oN];end;end;else if s8==0x02F then for aN=W8[6],W8[1]do(fi)[aN]=nil;end;else if W8[0X0003]==0XDa then do Vi=Vi-1;end;(wI)[Vi]={[0X1]=(W8[0X1]-0Xe6),[0x7]=61,[6]=(W8[6]-0Xe6)};elseif W8[3]==0X12 then Vi=Vi-0x001;wI[Vi]={[0X7]=0X3B,[1]=(W8[0X01]-0Xb3),[6]=(W8[0X6]-0xb3)};else repeat local tD,HD=lI,fi;if#tD>0X0000 then local Bz=({});for aW,eW in V,tD do do for oy,iy in V,eW do if iy[1]==HD and iy[0x2]>=0X0 then local g7=iy[0X2];if not Bz[g7]then(Bz)[g7]={HD[g7]};end;(iy)[0X1]=Bz[g7];iy[0X02]=0x0001;end;end;end;end;end;until true;local ct=W8[0x6];do return m(fi,ct,ct+W8[1]-0X2);end;end;end;end;end;end;else do if not(s8<0x0051)then if s8>=87 then if s8<0X00005a then if not(s8>=0X58)then do ui=W8[6];end;(fi)[ui]=fi[ui]();else if s8==0X0059 then do fi[W8[6]]=fi[W8[0X1]]/fi[W8[3]];end;else local vm,hm=W8[6],(W8[1]);do if hm~=0 then ui=vm+hm-0x1;end;end;local am,Xm=nil,(nil);local Pm=(W8[0x3]);do if hm==0x01 then am,Xm=tx(fi[vm]());else do am,Xm=tx(fi[vm](m(fi,vm+1,ui)));end;end;end;if Pm~=1 then if Pm==0 then am=am+vm-1;ui=am;else am=vm+Pm-0X2;ui=am+0X1;end;local O_=(0X00);do for b7=vm,am do O_=O_+0X1;(fi)[b7]=Xm[O_];end;end;else ui=vm-1;end;end;end;else if s8<91 then Vi=W8[1];else if s8==92 then local Rc=(W8[6]);fi[Rc](fi[Rc+0X0001]);ui=Rc-0X1;else local g8=W8[0X6];local N8,X8=fi[g8]();if N8 then Vi=W8[1];fi[g8+3]=X8;end;end;end;end;else do if s8>=84 then if not(s8>=85)then local EE=fi[W8[0X1]]/fi[W8[3]];do fi[W8[6]]=EE-EE%0X1;end;else if s8==0X056 then do if W8[0X3]==101 then Vi=Vi-0X1;wI[Vi]={[6]=(W8[6]-0Xe9),[1]=(W8[1]-0XE9),[0X00007]=6};elseif W8[0X3]==251 then Vi=Vi-1;wI[Vi]={[7]=59,[0X06]=(W8[0X00006]-149),[0x1]=(W8[0X00001]-149)};else if W8[0X3]~=142 then(fi)[W8[0X006]]=bi[pI+0X1];else do Vi=Vi-1;end;(wI)[Vi]={[6]=(W8[6]-0X9a),[1]=(W8[0X1]-154),[0x7]=0x52};end;end;end;else local Pm=W8[6];do(fi)[Pm]=fi[Pm](fi[Pm+0X1]);end;ui=Pm;end;end;else do if not(s8<82)then do if s8==0x53 then fi[W8[6]][fi[W8[0X1]]]=W8[0X0004];else do(fi)[W8[6]]=#fi[W8[1]];end;end;end;else do if fi[W8[0X1]]<fi[W8[3]]then Vi=W8[6];end;end;end;end;end;end;end;else do if s8>=75 then if not(s8>=78)then do if s8>=76 then if s8==0X4d then(fi)[W8[0X6]]=W(fi[W8[0x1]],fi[W8[0X3]]);else do Bx[W8[0X1]]=fi[W8[0X00006]];end;end;else local hy=(W8[0x6]);do ui=hy+W8[1]-1;end;fi[hy](m(fi,hy+0X1,ui));do ui=hy-0X1;end;end;end;else if not(s8>=79)then do if not(fi[W8[1]]<fi[W8[0X3]])then do Vi=W8[6];end;end;end;else if s8==0x50 then(fi)[W8[0x006]]=K(fi[W8[1]],fi[W8[3]]);else if not(not(fi[W8[1]]<=W8[4]))then else Vi=W8[6];end;end;end;end;else if s8<0X48 then if not(s8<0x46)then if s8~=0X000047 then local h_=(W8[6]);ui=h_+W8[1]-0X1;(fi)[h_]=fi[h_](m(fi,h_+0X1,ui));ui=h_;else local Xy=(W8[6]);local ny=L(function(...)(c)();for s1,P1 in...do c(true,s1,P1);end;end);ny(fi[Xy],fi[Xy+0X1],fi[Xy+0X2]);ui=Xy;(fi)[Xy]=ny;Vi=W8[1];end;else if fi[W8[1]]~=W8[4]then else do Vi=W8[6];end;end;end;else if s8<0X49 then(fi)[W8[6]]=false;else if s8==0X04A then local C7=W8[6];local D7=(pi-pI);if not(D7<0)then else do D7=-1;end;end;for lE=C7,C7+D7 do do fi[lE]=bi[pI+(lE-C7)+1];end;end;ui=C7+D7;else do if W8[3]~=227 then do(fi)[W8[6]]=fi[W8[0X00001]];end;else Vi=Vi-0X00001;do(wI)[Vi]={[6]=(W8[0x6]-0X004a),[0X1]=(W8[1]-0X4a),[0X00007]=0X2B};end;end;end;end;end;end;end;end;end;end;end;end;end;until false;end;end;end;if F then(F)(kI,HI);end;return kI;end;break;end;until(false);end;local q=assert;Ec=3;local Gx,gx=nil,(nil);repeat if Ec<=0X1 then do if Ec==0 then return Hx(A,bx,gx)(...);else gx=Gx();Ec=0X2;end;end;else if not(Ec<=2)then if Ec==3 then function Gx()local TP,PP=0,nil;do repeat if TP~=0 then PP={};TP=0X2;else TP=1;end;until TP==2;end;local pP,oP,UP,GP=nil,nil,nil,nil;for y3=0,0X4 do if y3<=1 then do if y3==0 then pP={bx,bx,bx,nil,nil,bx,{},{},{}};else oP=cx;end;end;elseif not(y3<=0x2)then if y3~=0X00003 then GP={};else(pP)[0X00D]=w();end;else UP={};end;end;local KP=(nil);for Jd=0,7 do do if Jd<=3 then if not(Jd<=0X001)then if Jd~=0x2 then KP=w();else for z1=0x1,j()do(GP)[z1]={w(),j()};end;end;else if Jd==0X0 then pP[0x0000c]=e();else do pP[2]=GP;end;end;end;else if not(Jd<=0X005)then do if Jd==6 then do(pP)[5]=j();end;else(pP)[18]=e();end;end;else if Jd~=4 then pP[ex]=D(KP,2,1)~=0X0000;else(pP)[1]=D(KP,0X01,0X001)~=hx;end;end;end;end;end;local hP=(pP[9]);local SP=nil;for wH=0,1 do do if wH~=0X0000 then for Vl=hx,SP-1 do(hP)[Vl]=Gx();end;else SP=e()-0X124a7;end;end;end;do TP=0X5;end;local bP=(nil);do repeat if TP<=0X2 then if TP<=0 then do(pP)[0X13]=e();end;do TP=3;end;else do if TP~=0X1 then do(pP)[0X0012]=w();end;TP=0X00;else bP=e()-72817;TP=6;end;end;end;else if not(TP<=3)then if TP~=4 then do(pP)[6]=j();end;do TP=4;end;else pP[Nx]=w();TP=0x0002;end;else(pP)[4]=j();TP=1;end;end;until TP>=0X6;end;local OP=w();TP=0X000;local QP=(nil);while TP<=0x1 do if TP==0 then QP=w()~=0X00;TP=0X1;else for hg=1,bP do local Yg=(bx);local bg=(w());do PP[hg-1]=oP;end;local kg=(nil);local gg=0X2;while gg<4 do do if not(gg<=0X1)then if gg~=2 then oP=oP+0X1;gg=0X4;else if bg==113 then Yg=p();elseif bg==7 then do Yg=p();end;elseif bg==72 then Yg=false;elseif bg==0x095 then Yg=H(Jx(OP),p()+e());elseif bg==209 then Yg=X();elseif bg==0X0004d then Yg=jx;elseif bg==0x000089 then Yg=H(Jx(OP),0x15);elseif bg==234 then Yg=H(Jx(OP),p()+e());elseif bg==245 then Yg=p();elseif bg==ux then do Yg=H(Jx(OP),w());end;elseif bg~=0XBa then else Yg=H(Jx(OP),5);end;gg=0X0001;end;else if gg==0 then UP[oP]=kg;gg=3;else kg={Yg,{}};gg=0;end;end;end;end;if not(QP)then else do for yH=0X0,1 do if yH~=0X0000 then do ax=ax+cx;end;else(Tx)[ax]=kg;end;end;end;end;end;TP=0x2;end;end;pP[Sx]=e();local IP=pP[0X7];TP=0X00005;local tP=(nil);while 0.6868791130974989 do do if not(TP<=0X002)then do if TP<=0X00003 then do pP[0X000b]=w();end;TP=1;else if TP==0X4 then for ft=0X01,tP do IP[ft]={[1]=u(),[0x3]=u(),[0x4]=w(),[0X6]=u(),[5]=w(),[0X2]=w(),[0X07]=j()};end;TP=2;else tP=e()-37562;TP=4;end;end;end;else do if TP<=0 then(pP)[12]=w();TP=0X03;else do if TP==0X01 then return pP;else for D0=0x1,tP do local n0=(pP[0X7][D0]);for k1,t1 in ipairs(Q)do local P1=0X0001;local M1,h1=nil,(nil);while true do if P1<=0 then do h1=n0[M1];end;P1=2;elseif P1~=0X01 then do if h1==Nx then local pX,ZX=nil,(nil);for Su=0X0,2 do if not(Su<=0X00000)then if Su~=0X01 then if ZX then local WH=0;local PH=(nil);repeat if not(WH<=0)then if WH==0x1 then do PH=ZX[sx];end;WH=2;else(PH)[#PH+0x1]={n0,M1};break;end;else n0[M1]=ZX[1];do WH=0X01;end;end;until(false);end;else do ZX=UP[pX];end;end;else pX=PP[n0[t1]];end;end;elseif h1~=Sx then else(n0)[t1]=D0+n0[t1]+0X00001;end;end;break;else M1=b[t1];do P1=0X00;end;end;end;end;end;TP=0X0;end;end;end;end;end;end;end;end;do Ec=0X1;end;else Tx=bx;do Ec=0x0;end;end;else Bx[0X00001]=Tx;Ec=0X4;end;end;until false;end)(next,rawset,"",nil,0x000039,0X7,1,3,rawget,string.gsub,0X10,unpack,0X8,12,string.char,table.unpack,0X2,coroutine.yield,'b\097\110\100',bit32,true,201,table.insert,string.sub,'\114sh\105f\116',0,0x1F3d,coroutine,getfenv,0X6,string.byte,10,20,'\098\111r',0x000010000,bit,9,0Xe,0XB,0X0005,0X4,{0X00009265,0x0b73379d6,1654205667,76428498,0X000015019397,19025948,2971141963,0XA2fcD652,0X766B3f81},...);
